{"version":3,"sources":["../node_modules/cookie/index.js","../node_modules/universal-cookie/es6/utils.js","../node_modules/universal-cookie/es6/Cookies.js","containers/Explore/Explore.js"],"names":["exports","parse","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","i","length","pair","eq_idx","indexOf","key","substr","trim","val","slice","undefined","tryDecode","serialize","name","enc","encode","fieldContentRegExp","test","value","maxAge","isNaN","Error","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent","e","readCookie","cleanValue","cleanupCookieValue","doNotParse","isParsingCookie","JSON","objectAssign","cookies","Cookies","_this","this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","Promise","document","catch","prototype","_updateBrowserValues","parseOptions","_emitChange","params","get","getAll","result","name_1","set","_a","stringify","remove","finalOptions","Date","addChangeListener","callback","push","removeChangeListener","idx","splice","Explore","state","username","Fragment","class","Component"],"mappings":"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","file":"static/js/6.2566b41c.chunk.js","sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {};\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('='); // skip things that don't look like key=value\n\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim();\n    var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values\n\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    } // only assign once\n\n\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}","import * as cookie from 'cookie';\nexport function hasDocumentCookie() {\n  // Can we get/set cookies on document.cookie?\n  return typeof document === 'object' && typeof document.cookie === 'string';\n}\nexport function cleanCookies() {\n  document.cookie.split(';').forEach(function (c) {\n    document.cookie = c.replace(/^ +/, '').replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\n  });\n}\nexport function parseCookies(cookies, options) {\n  if (typeof cookies === 'string') {\n    return cookie.parse(cookies, options);\n  } else if (typeof cookies === 'object' && cookies !== null) {\n    return cookies;\n  } else {\n    return {};\n  }\n}\nexport function isParsingCookie(value, doNotParse) {\n  if (typeof doNotParse === 'undefined') {\n    // We guess if the cookie start with { or [, it has been serialized\n    doNotParse = !value || value[0] !== '{' && value[0] !== '[' && value[0] !== '\"';\n  }\n\n  return !doNotParse;\n}\nexport function readCookie(value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var cleanValue = cleanupCookieValue(value);\n\n  if (isParsingCookie(cleanValue, options.doNotParse)) {\n    try {\n      return JSON.parse(cleanValue);\n    } catch (e) {// At least we tried\n    }\n  } // Ignore clean value if we failed the deserialization\n  // It is not relevant anymore to trim those values\n\n\n  return value;\n}\n\nfunction cleanupCookieValue(value) {\n  // express prepend j: before serializing a cookie\n  if (value && value[0] === 'j' && value[1] === ':') {\n    return value.substr(2);\n  }\n\n  return value;\n}","import * as cookie from 'cookie';\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils'; // We can't please Rollup and TypeScript at the same time\n// Only way to make both of them work\n\nvar objectAssign = require('object-assign');\n\nvar Cookies =\n/** @class */\nfunction () {\n  function Cookies(cookies, options) {\n    var _this = this;\n\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.cookies = parseCookies(cookies, options);\n    new Promise(function () {\n      _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }).catch(function () {});\n  }\n\n  Cookies.prototype._updateBrowserValues = function (parseOptions) {\n    if (!this.HAS_DOCUMENT_COOKIE) {\n      return;\n    }\n\n    this.cookies = cookie.parse(document.cookie, parseOptions);\n  };\n\n  Cookies.prototype._emitChange = function (params) {\n    for (var i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  };\n\n  Cookies.prototype.get = function (name, options, parseOptions) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._updateBrowserValues(parseOptions);\n\n    return readCookie(this.cookies[name], options);\n  };\n\n  Cookies.prototype.getAll = function (options, parseOptions) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._updateBrowserValues(parseOptions);\n\n    var result = {};\n\n    for (var name_1 in this.cookies) {\n      result[name_1] = readCookie(this.cookies[name_1], options);\n    }\n\n    return result;\n  };\n\n  Cookies.prototype.set = function (name, value, options) {\n    var _a;\n\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    this.cookies = objectAssign({}, this.cookies, (_a = {}, _a[name] = value, _a));\n\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, value, options);\n    }\n\n    this._emitChange({\n      name: name,\n      value: value,\n      options: options\n    });\n  };\n\n  Cookies.prototype.remove = function (name, options) {\n    var finalOptions = options = objectAssign({}, options, {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = objectAssign({}, this.cookies);\n    delete this.cookies[name];\n\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, '', finalOptions);\n    }\n\n    this._emitChange({\n      name: name,\n      value: undefined,\n      options: options\n    });\n  };\n\n  Cookies.prototype.addChangeListener = function (callback) {\n    this.changeListeners.push(callback);\n  };\n\n  Cookies.prototype.removeChangeListener = function (callback) {\n    var idx = this.changeListeners.indexOf(callback);\n\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n  };\n\n  return Cookies;\n}();\n\nexport default Cookies;","import React, { Component } from 'react';\nimport classes from './Explore.module.css';\nimport * as _ from 'lodash';\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\nclass Explore extends Component {\n\n    state = {\n      username: cookies.getAll()\n  }\n  render() {\n/*\n    for(let i=0; i<localStorage.length; i++) {\n      let key = localStorage.key(i);\n      console.log(`${key}: ${localStorage.getItem(key)}`);\n    }*/\n\n//    console.log(this.state.username);\n    return (\n\n      <React.Fragment>\n\n        <br/>\n\n        <div class=\"container-fluid\">\n\n          <div class=\"row\">\n            <div class=\"col-lg-12 text-left mt-5 mb-5 pl-5\">\n              <h1> Explore data section </h1>\n              <p> Under construction </p>\n            </div>\n          </div>\n\n\n          {/*{this.state.username} */}\n\n        </div>\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default Explore;\n\n\n\n\n"],"sourceRoot":""}