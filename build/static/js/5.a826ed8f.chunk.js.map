{"version":3,"sources":["containers/Search/Search.module.css","containers/FileRepository/FileRepository.module.css","containers/Aggs/Aggs.js","containers/Search/Search.js","containers/SQON/SQON.js","containers/FileRepository/FileRepository.js"],"names":["module","exports","Aggs","bolleanAggs","field","displayName","active","type","allowedValues","restricted","buckets","key","doc_count","key_as_string","aggs","Fragment","className","headerTitle","initial","sqon","render","update","JSON","stringify","map","agg","handleValueClick","generateNextSQON","isActive","d","inCurrentSQON","value","dotField","currentSQON","stats","min","max","initialState","state","setState","handleDateChange","getActiveValue","op","currentFieldValue","count","avg","sum","unit","handleChange","index","onChange","e","target","debounceTime","Component","Search","ChooseProject","projectId","projects","css","PORTAL_NAME","setValue","id","x","graphqlField","find","types","name","Portal","style","props","display","ACTIVE_INDEX","ACTIVE_INDEX_NAME","PROJECT_ID","Arranger","disableSocket","SQON","content","fields","FileRepository","class"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,gC,oBCAlCD,EAAOC,QAAU,CAAC,KAAO,+B,yICyXVC,G,wLAlWX,IAAMC,EAAc,CAClB,CACEC,MAAO,2BACPC,YAAa,0BACbC,QAAQ,EACRC,KAAM,eACNC,cAAe,GACfC,YAAY,EACZC,QAAS,CACP,CACEC,IAAK,IACLC,UAAW,KACXC,cAAe,SAEjB,CACEF,IAAK,IACLC,UAAW,IACXC,cAAe,UAIrB,CACET,MAAO,wCACPC,YAAa,iBACbC,QAAQ,EACRC,KAAM,eACNC,cAAe,GACfC,YAAY,EACZC,QAAS,CACP,CACEC,IAAK,IACLC,UAAW,KACXC,cAAe,SAEjB,CACEF,IAAK,IACLC,UAAW,IACXC,cAAe,UAIrB,CACET,MAAO,0CACPC,YAAa,iBACbC,QAAQ,EACRC,KAAM,eACNC,cAAe,GACfC,YAAY,EACZC,QAAS,CACP,CACEC,IAAK,IACLC,UAAW,EACXC,cAAe,SAEjB,CACEF,IAAK,IACLC,UAAW,IACXC,cAAe,UAIrB,CACET,MAAO,0CACPC,YAAa,iBACbC,QAAQ,EACRC,KAAM,eACNC,cAAe,GACfC,YAAY,EACZC,QAAS,CACP,CACEC,IAAK,IACLC,UAAW,KACXC,cAAe,SAEjB,CACEF,IAAK,IACLC,UAAW,EACXC,cAAe,WAMnBC,EAAO,CACT,CACEV,MAAO,QACPC,YAAa,QACbC,QAAQ,EACRC,KAAM,eACNC,cAAe,GACfC,YAAY,EACZC,QAAS,CACP,CACEE,UAAW,EACXD,IAAK,SAEP,CACEC,UAAW,EACXD,IAAK,UAEP,CACEC,UAAW,GACXD,IAAK,UAIX,CACEP,MAAO,QACPC,YAAa,QACbC,QAAQ,EACRC,KAAM,eACNC,cAAe,GACfC,YAAY,EACZC,QAAS,CACP,CACEE,UAAW,EACXD,IAAK,SAEP,CACEC,UAAW,EACXD,IAAK,SAEP,CACEC,UAAW,GACXD,IAAK,QAEP,CACEC,UAAW,EACXD,IAAK,SAEP,CACEC,UAAW,GACXD,IAAK,SAEP,CACEC,UAAW,GACXD,IAAK,YAMb,OAEE,kBAAC,IAAMI,SAAP,KAEE,yBAAKC,UAAU,oBACb,kBAAC,UAAD,CACEZ,MAAM,eACNC,YAAY,eACZK,QAAS,CACP,CACEE,UAAW,EACXD,IAAK,0BAEP,CACEC,UAAW,GACXD,IAAK,4BAMX,kBAAC,UAAD,CACEP,MAAM,eACNC,YAAY,eACZK,QAAS,CACP,CACEE,UAAW,EACXD,IAAK,0BAEP,CACEC,UAAW,GACXD,IAAK,0BAGTM,YAAY,YAGd,kBAAC,IAAD,CACEC,QAAS,CAAEC,KAAM,MACjBC,OAAQ,gBAAGD,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,OACN,6BACE,sCAAYC,KAAKC,UAAUJ,IAC3B,6BACGL,EAAKU,KAAI,SAAAC,GAAG,OAEX,kBAAC,UAAD,eACEd,IAAKc,EAAIrB,OACLqB,EAFN,CAGEC,iBAAkB,gBAAGC,EAAH,EAAGA,iBAAH,OAChBN,EAAO,CAAEF,KAAMQ,EAAiBR,MAElCS,SAAU,SAAAC,GAAC,OACTC,wBAAc,CACZC,MAAOF,EAAEE,MACTC,SAAUH,EAAEzB,MACZ6B,YAAad,gBAU7B,kBAAC,WAAD,CACEf,MAAM,eACNC,YAAY,eACZ6B,MAAO,CAELC,IAAK,cACLC,IAAK,iBAKT,kBAAC,UAAD,CAAWC,aAAc,CAAElB,KAAM,QAC9B,gBAAYA,EAAZ,EAAGmB,MAASnB,KAAQoB,EAApB,EAAoBA,SAApB,OACC,6BACE,sCAAYjB,KAAKC,UAAUJ,IAC3B,6BACE,kBAAC,WAAD,CACEf,MAAM,eACNC,YAAY,eACZ6B,MAAO,CACLC,IAAK,cACLC,IAAK,eAEPI,iBAAkB,wEAAoC,GAApC,IAAGb,wBAAH,MAAsB,aAAtB,SAChBY,EAAS,CAAEpB,KAAMQ,EAAiBR,MAEpCsB,eAAgB,gBAAGC,EAAH,EAAGA,GAAItC,EAAP,EAAOA,MAAP,OACduC,4BAAkB,CAChBD,KACAV,SAAU5B,EACVe,iBASd,kBAAC,WAAD,CACEf,MAAM,kCACNC,YAAY,0BACZ6B,MAAO,CACLC,IAAK,GACLC,IAAK,IACLQ,MAAO,IACPC,IAAK,GACLC,IAAK,QAKT,kBAAC,IAAD,CACE5B,QAAS,CAAEC,KAAM,MACjBC,OAAQ,gBAAGD,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,OACN,yBAAKL,UAAU,mBACb,sCAAYM,KAAKC,UAAUJ,IAC3B,kBAAC,WAAD,CACEf,MAAM,kCACNC,YAAY,0BACZ0C,KAAM,IACNb,MAAO,CACLC,IAAK,GACLC,IAAK,IACLQ,MAAO,IACPC,IAAK,GACLC,IAAK,MAEPE,aAAc,gBAAGrB,EAAH,EAAGA,iBAAH,OACZN,EAAO,CAAEF,KAAMQ,EAAiBR,YAO1C,kBAAC,aAAD,CACEf,MAAM,kCACNC,YAAY,0BACZK,QAAS,CACP,CACEC,IAAK,IACLC,UAAW,KACXC,cAAe,SAEjB,CACEF,IAAK,IACLC,UAAW,IACXC,cAAe,WAMrB,kBAAC,IAAD,CACEK,QAAS,CAAEC,KAAM,MACjBC,OAAQ,gBAAGD,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,OACN,6BACE,sCAAYC,KAAKC,UAAUJ,IAC3B,6BACGhB,EAAYqB,KAAI,SAAAC,GAAG,OAClB,kBAAC,aAAD,eACEd,IAAKc,EAAIrB,OACLqB,EAFN,CAGEC,iBAAkB,gBAAGC,EAAH,EAAGA,iBAAH,OAChBN,EAAO,CAAEF,KAAMQ,EAAiBR,MAElCS,SAAU,SAAAC,GAAC,OACTC,wBAAc,CACZC,MAAOF,EAAEE,MACTC,SAAUH,EAAEzB,MACZ6B,YAAad,gBAU7B,kBAAC,IAAD,CACED,QAAS,CAAE+B,MAAO,GAAI9B,KAAM,IAC5BC,OAAQ,gBAAG6B,EAAH,EAAGA,MAAO5B,EAAV,EAAUA,OAAV,OACN,6BACE,0CACA,2BACEU,MAAOkB,EACPC,SAAU,SAAAC,GAAC,OAAI9B,EAAO,CAAE4B,MAAOE,EAAEC,OAAOrB,WAEzCkB,GACC,6BACE,kBAAC,YAAD,CAAWnC,KAAMA,EAAMmC,MAAOA,EAAOI,aAAc,iB,GAvVpDC,Y,4CCwIJC,E,iLAjIX,IAAMC,EAAgB,SAAC,GAA4C,IAAD,MAAzCP,EAAyC,EAAzCA,MAAOQ,EAAkC,EAAlCA,UAAWpC,EAAuB,EAAvBA,OAAQqC,EAAe,EAAfA,SACjD,OACE,yBACEC,IAAG,oLAQH,wBACEA,IAAG,gDAIFC,eAEH,4BACE7B,MAAO0B,EACPP,SAAU,SAAAC,GACRU,mBAAS,aAAcV,EAAEC,OAAOrB,OAChCV,EAAO,CACLoC,UAAWN,EAAEC,OAAOrB,UAIxB,4BAAQ+B,GAAG,WAAX,oBACCJ,EAASlC,KAAI,SAAAuC,GAAC,OACb,4BAAQpD,IAAKoD,EAAED,GAAI/B,MAAOgC,EAAED,IACzBC,EAAED,QAIT,4BACE/B,MAAOkB,EACPC,SAAU,SAAAC,GAAM,IAAD,IACbU,mBAAS,eAAgBV,EAAEC,OAAOrB,OAElC,IAAIiC,EAAY,UAAGN,EAChBO,MAAK,SAAAF,GAAC,OAAIA,EAAED,KAAOL,YADN,iBAAG,EAEfS,aAFY,aAAG,EAEPA,MAAMD,MAAK,SAAAF,GAAC,OAAIA,EAAEd,QAAUE,EAAEC,OAAOrB,SAAOoC,KAExDN,mBAAS,oBAAqBG,GAC9B3C,EAAO,CACL4B,MAAOE,EAAEC,OAAOrB,MAChBiC,mBAIJ,4BAAQF,GAAG,WAAX,mBAhBF,UAiBGJ,EACEO,MAAK,SAAAF,GAAC,OAAIA,EAAED,KAAOL,YAlBxB,iBAiBG,EAEGS,aAnBN,iBAiBG,EAEWA,aAnBd,aAiBG,EAEmB1C,KAAI,SAAAuC,GAAC,OACrB,4BAAQpD,IAAKoD,EAAEd,MAAOlB,MAAOgC,EAAEd,OAC5Bc,EAAEd,aAQXmB,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,yBACtC,OACE,yBAAKD,MAAK,aAAIE,QAAS,QAAWF,IAUhC,6BAEE,kBAAC,cAAgBC,GACjB,kBAAC,QAAUA,MAMnB,OAEE,kBAAC,IAAMvD,SAAP,KAEE,kBAAC,IAAD,CACEG,QAAS,CACP+B,MAAOuB,eACPR,aAAcS,oBACdhB,UAAWiB,cAEbtD,OAAQ,YAAiD,IAA9C6B,EAA6C,EAA7CA,MAAOe,EAAsC,EAAtCA,aAAcP,EAAwB,EAAxBA,UAAWpC,EAAa,EAAbA,OACzC,OAAO4B,GAASQ,EACd,kBAACkB,EAAA,SAAD,CACEC,eAAa,EACb3B,MAAOA,EACPe,aAAcA,EACdP,UAAWA,EACXrC,OAAQ,SAAAkD,GACN,OACE,kBAAC,IAAMvD,SAAP,KACE,kBAACqD,EAAD,eAAiBE,EAAjB,CAAwBN,eAAcP,mBAK5C,kBAAC,cAAD,CACErC,OAAQ,SAAAkD,GAAK,OACX,kBAACd,EAAD,iBACMc,EADN,CAEErB,MAAOA,EACPQ,UAAWA,EACXpC,OAAQA,gB,GAvHTiC,a,kBC2LNuB,E,iLAzMX,OAEE,kBAAC,IAAM9D,SAAP,KA6JE,kBAAC,IAAD,CACEI,KAAM,CACJuB,GAAI,MACJoC,QAAS,CACP,CACEpC,GAAI,KACJoC,QAAS,CACP1E,MAAO,SACP2B,MAAO,WAGX,CACEW,GAAI,KACJoC,QAAS,CACP1E,MAAO,qCACP2B,MAAO,QAOjB,kBAAC,IAAD,CACEZ,KAAM,CACJuB,GAAI,MACJoC,QAAS,CACP,CACEpC,GAAI,SACJoC,QAAS,CACPC,OAAQ,CAAC,SAAU,QAAS,WAC5BhD,MAAO,kB,GAjMNuB,aCCb0B,G,wLAMF,OAEE,kBAAC,IAAMjE,SAAP,KAEE,6BAEA,yBAAKkE,MAAM,mBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,SACP,kBAAC,EAAD,OAEJ,yBAAKA,MAAM,UACP,yBAAKA,MAAM,OACP,kBAAC,EAAD,OAEJ,yBAAKA,MAAM,OACP,kBAAC,EAAD,e,GAtBK3B,cAkCd0B","file":"static/js/5.a826ed8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrangerTable\":\"Search_arrangerTable__1U-uN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"FileRepository_test__9HW-o\"};","import React from 'react';\n\nimport {\n  DatesAgg,\n  BooleanAgg,\n  TermAgg,\n  RangeAgg,\n  AggsPanel,\n} from '@arranger/components/dist/Aggs';\n\n//import { action } from '@storybook/addon-actions';\n\nimport { inCurrentSQON, currentFieldValue } from '@arranger/components/dist/SQONView/utils';\n\nimport Component from 'react-component-component';\n\nimport State from '@arranger/components/dist/State';\n\nimport './Aggs.css';\n\nclass Aggs extends Component {\n\n  render() {\n\n    const bolleanAggs = [\n      {\n        field: 'participants__is_proband',\n        displayName: 'Participants is proband',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 2580,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 961,\n            key_as_string: 'true',\n          },\n        ],\n      },\n      {\n        field: 'sequencing_experiments__is_paired_end',\n        displayName: 'Is Paired Ende',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 2580,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 961,\n            key_as_string: 'true',\n          },\n        ],\n      },\n      {\n        field: 'sequencing_experiments__is_paired_end_0',\n        displayName: 'Is Paired Ende',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 0,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 961,\n            key_as_string: 'true',\n          },\n        ],\n      },\n      {\n        field: 'sequencing_experiments__is_paired_end_1',\n        displayName: 'Is Paired Ende',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 2312,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 0,\n            key_as_string: 'true',\n          },\n        ],\n      },\n    ];\n\n    let aggs = [\n      {\n        field: 'color',\n        displayName: 'Color',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            doc_count: 1,\n            key: 'green',\n          },\n          {\n            doc_count: 5,\n            key: 'yellow',\n          },\n          {\n            doc_count: 12,\n            key: 'blue',\n          },\n        ],\n      },\n      {\n        field: 'taste',\n        displayName: 'Taste',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            doc_count: 1,\n            key: 'spicy',\n          },\n          {\n            doc_count: 5,\n            key: 'sweet',\n          },\n          {\n            doc_count: 12,\n            key: 'sour',\n          },\n          {\n            doc_count: 5,\n            key: 'salty',\n          },\n          {\n            doc_count: 12,\n            key: 'umami',\n          },\n          {\n            doc_count: 12,\n            key: 'bland',\n          },\n        ],\n      },\n    ];\n\n    return (\n\n      <React.Fragment>\n\n        <div className=\"term-agg-wrapper\">\n          <TermAgg\n            field=\"disease_type\"\n            displayName=\"Disease Type\"\n            buckets={[\n              {\n                doc_count: 2,\n                key: 'Acute Myeloid Leukemia',\n              },\n              {\n                doc_count: 10,\n                key: 'Acinar cell neoplasms',\n              },\n            ]}\n          //handleValueClick={action('Term Agg Selection')}\n          />\n\n          <TermAgg\n            field=\"disease_type\"\n            displayName=\"Disease Type\"\n            buckets={[\n              {\n                doc_count: 2,\n                key: 'Acute Myeloid Leukemia',\n              },\n              {\n                doc_count: 10,\n                key: 'Acinar cell neoplasms',\n              },\n            ]}\n            headerTitle=\"# files\"\n          />\n\n          <State\n            initial={{ sqon: null }}\n            render={({ sqon, update }) => (\n              <div>\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <div>\n                  {aggs.map(agg => (\n                    // TODO: switch on agg type\n                    <TermAgg\n                      key={agg.field}\n                      {...agg}\n                      handleValueClick={({ generateNextSQON }) =>\n                        update({ sqon: generateNextSQON(sqon) })\n                      }\n                      isActive={d =>\n                        inCurrentSQON({\n                          value: d.value,\n                          dotField: d.field,\n                          currentSQON: sqon,\n                        })\n                      }\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          />\n\n          <DatesAgg\n            field=\"disease_type\"\n            displayName=\"Disease Type\"\n            stats={{\n              // expects linux timestamp\n              min: 1529539200125,\n              max: 1529539259913,\n            }}\n          //handleValueClick={action('Term Agg Selection')}\n          />\n\n          <Component initialState={{ sqon: null }}>\n            {({ state: { sqon }, setState }) => (\n              <div>\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <div>\n                  <DatesAgg\n                    field=\"disease_type\"\n                    displayName=\"Disease Type\"\n                    stats={{\n                      min: 1529539200125,\n                      max: 1529539259913,\n                    }}\n                    handleDateChange={({ generateNextSQON = () => { } } = {}) =>\n                      setState({ sqon: generateNextSQON(sqon) })\n                    }\n                    getActiveValue={({ op, field }) =>\n                      currentFieldValue({\n                        op,\n                        dotField: field,\n                        sqon,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            )}\n          </Component>\n\n          <RangeAgg\n            field=\"cases__diagnoses__days_to_death\"\n            displayName=\"Diagnoses Days To Death\"\n            stats={{\n              min: 15,\n              max: 820,\n              count: 1000,\n              avg: 70,\n              sum: 15000,\n            }}\n          //handleChange={action(`Range Change`)}\n          />\n\n          <State\n            initial={{ sqon: null }}\n            render={({ sqon, update }) => (\n              <div className=\"range with sqon\">\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <RangeAgg\n                  field=\"cases__diagnoses__days_to_death\"\n                  displayName=\"Diagnoses Days To Death\"\n                  unit={'d'}\n                  stats={{\n                    min: 15,\n                    max: 820,\n                    count: 1000,\n                    avg: 70,\n                    sum: 15000,\n                  }}\n                  handleChange={({ generateNextSQON }) =>\n                    update({ sqon: generateNextSQON(sqon) })\n                  }\n                />\n              </div>\n            )}\n          />\n\n          <BooleanAgg\n            field=\"cases__diagnoses__days_to_death\"\n            displayName=\"Diagnoses Days To Death\"\n            buckets={[\n              {\n                key: '0',\n                doc_count: 2580,\n                key_as_string: 'false',\n              },\n              {\n                key: '1',\n                doc_count: 961,\n                key_as_string: 'true',\n              },\n            ]}\n          //handleChange={action(`Range Change`)}\n          />\n\n          <State\n            initial={{ sqon: null }}\n            render={({ sqon, update }) => (\n              <div>\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <div>\n                  {bolleanAggs.map(agg => (\n                    <BooleanAgg\n                      key={agg.field}\n                      {...agg}\n                      handleValueClick={({ generateNextSQON }) =>\n                        update({ sqon: generateNextSQON(sqon) })\n                      }\n                      isActive={d =>\n                        inCurrentSQON({\n                          value: d.value,\n                          dotField: d.field,\n                          currentSQON: sqon,\n                        })\n                      }\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          />\n\n          <State\n            initial={{ index: '', sqon: {} }}\n            render={({ index, update }) => (\n              <div>\n                <label>index: </label>\n                <input // <-- could be a dropdown of available indices\n                  value={index}\n                  onChange={e => update({ index: e.target.value })}\n                />\n                {index && (\n                  <div>\n                    <AggsPanel aggs={aggs} index={index} debounceTime={200} />\n                  </div>\n                )}\n              </div>\n            )}\n          />\n\n        </div>\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default Aggs;\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport classes from './Search.module.css';\n\nimport {\n  PORTAL_NAME,\n  ACTIVE_INDEX,\n  ACTIVE_INDEX_NAME,\n  PROJECT_ID,\n  deleteValue,\n  setValue,\n} from '@arranger/components/dist/utils/config';\n\nimport State from '@arranger/components/dist/State';\n\nimport {\n  Arranger,\n  GetProjects,\n  Aggregations,\n  CurrentSQON,\n  Table\n} from '@arranger/components/dist/Arranger';\n\n\nclass Search extends Component {\n\n  render() {\n\n    const ChooseProject = ({ index, projectId, update, projects }) => {\n      return (\n        <div\n          css={`\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            height: 100%;\n            justify-content: center;\n          `}\n        >\n          <h2\n            css={`\n              margin-top: 0;\n            `}\n          >\n            {PORTAL_NAME}\n          </h2>\n          <select\n            value={projectId}\n            onChange={e => {\n              setValue('PROJECT_ID', e.target.value);\n              update({\n                projectId: e.target.value,\n              });\n            }}\n          >\n            <option id=\"version\">Select a version</option>\n            {projects.map(x => (\n              <option key={x.id} value={x.id}>\n                {x.id}\n              </option>\n            ))}\n          </select>\n          <select\n            value={index}\n            onChange={e => {\n              setValue('ACTIVE_INDEX', e.target.value);\n\n              let graphqlField = projects\n                .find(x => x.id === projectId)\n                ?.types ?.types.find(x => x.index === e.target.value).name;\n\n              setValue('ACTIVE_INDEX_NAME', graphqlField);\n              update({\n                index: e.target.value,\n                graphqlField,\n              });\n            }}\n          >\n            <option id=\"version\">Select an index</option>\n            {projects\n              .find(x => x.id === projectId)\n              ?.types ?.types ?.map(x => (\n                <option key={x.index} value={x.index}>\n                  {x.index}\n                </option>\n              ))}\n          </select>\n        </div>\n      );\n    };\n\n    const Portal = ({ style, ...props }) => {\n      return (\n        <div style={{ display: 'flex', ...style }}>\n          {/*<Aggregations\n            style={{ width: 300 }}\n            componentProps={{\n              getTermAggProps: () => ({\n                maxTerms: 3,\n              }),\n            }}\n            {...props}\n          />*/}\n          <div\n          >\n            <CurrentSQON {...props} />\n            <Table {...props} />\n          </div>\n        </div>\n      );\n    };\n\n    return (\n\n      <React.Fragment>\n\n        <State\n          initial={{\n            index: ACTIVE_INDEX,\n            graphqlField: ACTIVE_INDEX_NAME,\n            projectId: PROJECT_ID,\n          }}\n          render={({ index, graphqlField, projectId, update }) => {\n            return index && projectId ? (\n              <Arranger\n                disableSocket\n                index={index}\n                graphqlField={graphqlField}\n                projectId={projectId}\n                render={props => {\n                  return (\n                    <React.Fragment>\n                      <Portal {...{ ...props, graphqlField, projectId }} />\n                    </React.Fragment>\n                  );\n                }}\n              />) : (\n                <GetProjects\n                  render={props => (\n                    <ChooseProject\n                      {...props}\n                      index={index}\n                      projectId={projectId}\n                      update={update}\n                    />\n                  )}\n                />\n              );\n          }}\n        />\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default Search;\n\n","import React, { Component } from 'react';\n//$FlowIgnore\nimport SQONView from '@arranger/components/dist/SQONView';\n//import { themeDecorator } from './decorators';\n\nclass SQON extends Component {\n\n  render() {\n\n    return (\n\n      <React.Fragment>\n\n        {/*\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung', 'heart'],\n                },\n              },\n            ],\n          }}\n        />\n        \n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung', 'heart', 'brain', 'blood', 'kidney'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: [\n                    'lung',\n                    'heart',\n                    'brain',\n                    'blood',\n                    'kidney',\n                    'lung1',\n                    'heart1',\n                    'brain1',\n                    'blood1',\n                    'kidney1',\n                    'lung2',\n                    'heart2',\n                    'brain2',\n                    'blood2',\n                    'kidney2',\n                    'lung3',\n                    'heart3',\n                    'brain3',\n                    'blood3',\n                    'kidney3',\n                  ],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung', 'heart', 'brain'],\n                },\n              },\n              {\n                op: 'in',\n                content: {\n                  field: 'gender',\n                  value: ['female', 'male', 'unknown'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: '>=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['1'],\n                },\n              },\n              {\n                op: '<=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['5'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: '>=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['1'],\n                },\n              },\n              {\n                op: '<=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['5'],\n                },\n              },\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['heart', 'lung', 'bone', 'blood', 'liver'],\n                },\n              },\n            ],\n          }}\n        />\n*/}\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'is',\n                content: {\n                  field: 'gender',\n                  value: 'female',\n                },\n              },\n              {\n                op: 'is',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: 5,\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'filter',\n                content: {\n                  fields: ['gender', 'state', 'country'],\n                  value: 'fema',\n                },\n              },\n            ],\n          }}\n        />\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SQON;","import React, { Component } from 'react';\nimport Aggs from '../Aggs/Aggs';\nimport Search from '../Search/Search';\nimport SQON from '../SQON/SQON';\nimport classes from './FileRepository.module.css';\n\nclass FileRepository extends Component {\n\n  render() {\n\n    //let width = \"580px\";\n\n    return (\n\n      <React.Fragment>\n        \n        <br/>\n        \n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-2\">\n                    <Aggs />\n                </div>\n                <div class=\"col-10\">\n                    <div class=\"row\">\n                        <SQON />\n                    </div>\n                    <div class=\"row\">\n                        <Search />\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default FileRepository;\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}